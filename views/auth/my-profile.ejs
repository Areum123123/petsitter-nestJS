<!doctype html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>돌보미 | 마이프로필</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');
      * {
        font-family: 'Jua', sans-serif;
        font-weight: 400;
        font-style: normal;
      }

      body {
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
        color: #333;
      }
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
      }
      .profile-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        display: flex;
        flex-direction: column;
      }
      .profile-header {
        background: #4a90e2;
        color: white;
        padding: 30px;
        text-align: center;
        position: relative;
      }
      .profile-image-container {
        position: relative;
        width: 150px;
        height: 150px;
        margin: 0 auto 20px;
      }
      .profile-image {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        border: 4px solid white;
      }
      .camera-icon {
        position: absolute;
        right: 0;
        bottom: 0;
        background: white;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        font-size: 20px;
        color: #4a90e2;
      }
      .profile-name {
        font-size: 2em;
        margin: 0;
      }
      .profile-content {
        display: flex;
        padding: 30px;
      }
      .profile-info {
        flex: 1;
        padding-right: 30px;
      }
      .info-item {
        display: flex;
        justify-content: space-between;
        padding: 15px 0;
        border-bottom: 1px solid #eee;
      }
      .info-label {
        font-weight: bold;
        color: #666;
      }
      .info-value {
        text-align: right;
      }
      .edit-link {
        position: absolute;
        top: 20px;
        right: 20px;
        color: white;
        text-decoration: none;
        font-size: 1em;
        background: rgba(255, 255, 255, 0.2);
        padding: 5px 10px;
        border-radius: 5px;
      }
      .management-section {
        flex: 1;
        display: flex;
        flex-direction: column;
      }
      .management-link {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: #4a90e2;
        font-weight: bold;
        font-size: 1.2em;
        padding: 30px;
        background: #f8f8f8;
        transition: background-color 0.3s;
      }
      .management-link:first-child {
        margin-bottom: 15px;
      }
      .management-link:hover {
        background-color: #e8f0fe;
      }
      .management-link i {
        margin-right: 10px;
      }
      .notification-section {
        margin-top: 30px;
        padding: 30px;
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }
      .notification-title {
        font-size: 1.5em;
        margin-bottom: 20px;
      }
      .notification-link {
        display: block;
        margin-bottom: 10px;
        text-decoration: none;
        color: #4a90e2;
        font-weight: bold;
        font-size: 1.1em;
        transition: color 0.3s;
      }
      .notification-link:hover {
        color: #357abd;
      }
      @media (max-width: 768px) {
        .profile-content {
          flex-direction: column;
        }
        .profile-info {
          padding-right: 0;
          padding-bottom: 30px;
        }
        .management-section {
          flex-direction: row;
        }
        .management-link:first-child {
          margin-bottom: 0;
          margin-right: 15px;
        }
      }

      h2 {
        margin-left: 1vw;
      }

      .header {
        display: flex;
        align-items: center;
        padding: 10px 20px;
        border-bottom: 1px solid #ddd;
        flex-wrap: nowrap; /* 줄바꿈 방지 */
        overflow-x: auto; /* 필요한 경우 수평 스크롤 허용 */
      }

      .header-links {
        display: flex;
        align-items: center;
        gap: 10px; /* 링크 사이의 간격 조정 */
      }

      .text-button {
        text-decoration: none;
        color: #87898c; /* 링크 색상 */
        font-weight: bold;
        font-size: 1.1em;
        padding: 10px;
        border: none;
        background: transparent;
        cursor: pointer;
        transition: color 0.3s;
      }
      /* 필요시 너비 조정 */
      .text-button {
        white-space: nowrap; /* 버튼 텍스트 줄바꿈 방지 */
      }
      .text-button:hover {
        color: #357abd; /* 호버 시 링크 색상 */
      }

      #mainBtn {
        color: #4a90e2;
        margin-left: 3vw;
      }

      #profileBtn {
        margin-left: 58vw;
      }

      /*  */
      .profile-link {
        display: inline-block;
        width: 45px; /* 원하는 크기로 조정 */
        height: 45px; /* 원하는 크기로 조정 */
        background-color: #4e9ef2; /* 배경색 */
        border-radius: 50%; /* 둥근 원 모양 */
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: #f7f3ef; /* 아이콘 색상 */
      }

      .profile-link i {
        font-size: 20px; /* 아이콘 크기 조정 */
      }
    </style>
  </head>
  <body>
    <div class="header">
      <div class="header-links">
        <a href="/" id="mainBtn" class="text-button">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 512 512"
            style="transform: translateX(-10px)"
          >
            <!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
            <path
              d="M226.5 92.9c14.3 42.9-.3 86.2-32.6 96.8s-70.1-15.6-84.4-58.5s.3-86.2 32.6-96.8s70.1 15.6 84.4 58.5zM100.4 198.6c18.9 32.4 14.3 70.1-10.2 84.1s-59.7-.9-78.5-33.3S-2.7 179.3 21.8 165.3s59.7 .9 78.5 33.3zM69.2 401.2C121.6 259.9 214.7 224 256 224s134.4 35.9 186.8 177.2c3.6 9.7 5.2 20.1 5.2 30.5l0 1.6c0 25.8-20.9 46.7-46.7 46.7c-11.5 0-22.9-1.4-34-4.2l-88-22c-15.3-3.8-31.3-3.8-46.6 0l-88 22c-11.1 2.8-22.5 4.2-34 4.2C84.9 480 64 459.1 64 433.3l0-1.6c0-10.4 1.6-20.8 5.2-30.5zM421.8 282.7c-24.5-14-29.1-51.7-10.2-84.1s54-47.3 78.5-33.3s29.1 51.7 10.2 84.1s-54 47.3-78.5 33.3zM310.1 189.7c-32.3-10.6-46.9-53.9-32.6-96.8s52.1-69.1 84.4-58.5s46.9 53.9 32.6 96.8s-52.1 69.1-84.4 58.5z"
            />
          </svg>
          반려견 돌보미</a
        >
        <a href="/api/petsitters/reservation" class="text-button px-4"
          >돌보미 예약</a
        >
        <a href="/api/petsitters" class="text-button px-4">펫시터 소개</a>

        <a href="/api/users/profile" id="profileBtn" class="profile-link">
          <i class="fas fa-user"></i>
        </a>
      </div>
    </div>
    <div class="container">
      <h2>마이 프로필</h2>
      <div class="profile-card">
        <div class="profile-header">
          <a href="/users/edit" class="edit-link">수정</a>
          <div class="profile-image-container">
            <img
              id="profileImage"
              class="profile-image"
              src="https://via.placeholder.com/150/CCCCCC/FFFFFF?text=No+Image"
              alt="Profile Image"
            />
            <label for="imageUpload" class="camera-icon">
              <i class="fas fa-camera"></i>
              <span style="display: none">📷</span>
            </label>
            <input
              type="file"
              id="imageUpload"
              accept="image/*"
              style="display: none"
            />
          </div>
          <h1 class="profile-name" id="userName">사용자 이름</h1>
        </div>
        <div class="profile-content">
          <div class="profile-info" id="userInfo">
            <!-- 사용자 정보가 여기에 동적으로 추가됩니다 -->
          </div>
          <div class="management-section">
            <a href="/reservations" class="management-link">
              <i class="far fa-calendar-alt"></i> 예약관리
            </a>
            <a href="/reviews" class="management-link">
              <i class="far fa-star"></i> 리뷰관리
            </a>
          </div>
        </div>
      </div>

      <div class="notification-section">
        <h2 class="notification-title">문의 및 알림</h2>
        <a href="/customer-service" class="notification-link">
          <i class="fas fa-headset"></i> 고객센터
        </a>
        <a href="/faq" class="notification-link">
          <i class="fas fa-question-circle"></i> 자주 묻는 질문
        </a>
        <a href="/notices" class="notification-link">
          <i class="fas fa-bullhorn"></i> 공지사항
        </a>
        <a href="/terms" class="notification-link">
          <i class="fas fa-file-contract"></i> 약관 및 정책
        </a>
      </div>
    </div>

    <script>
      let accessToken = '';

      document.addEventListener('DOMContentLoaded', function () {
        fetchSessionData();

        document
          .getElementById('imageUpload')
          .addEventListener('change', function () {
            const file = this.files[0];
            if (file) {
              uploadImage(file);
            }
          });

        window.addEventListener(
          'error',
          function (e) {
            if (e.target.tagName === 'I') {
              e.target.style.display = 'none';
              e.target.nextElementSibling.style.display = 'inline';
            }
          },
          true,
        );
      });

      //세션에서 가져오기
      function fetchSessionData() {
        fetch('/api/session', {
          method: 'GET',
          credentials: 'include',
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.accessToken) {
              accessToken = data.accessToken;
              fetchUserInfo();
            } else {
              console.error('No access token found in session');
              alert('로그인이 필요합니다.');
              window.location.href = '/api/auth/sign-in';
            }
          })
          .catch((error) => {
            console.error('Error fetching session data:', error);
            alert('세션 정보를 가져오는 중 문제가 발생했습니다.');
          });
      }

      function fetchUserInfo() {
        fetch('/api/users/me', {
          method: 'GET',
          headers: {
            Authorization: `Bearer ${accessToken}`,
            'Content-Type': 'application/json',
          },
        })
          .then((response) => {
            const contentType = response.headers.get('content-type');
            if (!contentType || !contentType.includes('application/json')) {
              throw new TypeError('Expected JSON, but received something else');
            }
            return response.json();
          })
          .then((data) => {
            if (data.status === 200) {
              displayUserInfo(data.data);
            } else {
              console.error('Failed to fetch user info:', data.message);
            }
          })
          .catch((error) => {
            console.error('Error:', error);
            alert('사용자 정보를 가져오는 중 문제가 발생했습니다.');
          });
      }

      function displayUserInfo(user) {
        const userInfoDiv = document.getElementById('userInfo');
        const infoToDisplay = ['email', 'phone_number', 'address'];

        document.getElementById('userName').textContent =
          user.name || '사용자 이름';

        infoToDisplay.forEach((key) => {
          const div = document.createElement('div');
          div.className = 'info-item';
          div.innerHTML = `<span class="info-label">${getLabel(key)}</span>
            <span class="info-value">${user[key] || '정보 없음'}</span>`;
          userInfoDiv.appendChild(div);
        });

        if (user.image_url) {
          const profileImage = document.getElementById('profileImage');
          profileImage.src = user.image_url;
        }
      }

      function getLabel(key) {
        const labels = {
          email: '이메일',
          phone_number: '연락처',
          address: '주소',
        };
        return labels[key] || key;
      }

      function uploadImage(file) {
        const formData = new FormData();
        formData.append('file', file);

        fetch('/api/users/me/upload-images', {
          method: 'POST',
          headers: {
            Authorization: `Bearer ${accessToken}`,
          },
          body: formData,
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then((data) => {
            if (data.status === 200) {
              alert('이미지가 업로드되었습니다.');
              displayProfileImage(data.data.image_url);
            } else {
              console.error('Failed to upload image:', data.message);
            }
          })
          .catch((error) => {
            console.error('Error:', error);
            alert('이미지 업로드 중 문제가 발생했습니다.');
          });
      }

      function displayProfileImage(imageUrl) {
        const profileImage = document.getElementById('profileImage');
        profileImage.src = imageUrl;
      }
    </script>
  </body>
</html>
