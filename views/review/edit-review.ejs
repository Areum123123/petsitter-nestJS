<!doctype html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>돌보미 | 리뷰 수정</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <style>
      /* 스타일링 부분은 그대로 유지 */
      body {
        background-color: #f0f2f5;
        font-family: 'Jua', sans-serif;
      }

      .form-container {
        max-width: 500px;
        margin: 50px auto;
        background: #fff;
        padding: 30px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
      }

      .form-title {
        font-size: 28px;
        font-weight: bold;
        color: #4e9ef2;
        text-align: center;
        margin-bottom: 30px;
      }

      .form-control {
        height: 45px;
        font-size: 16px;
        border: 1px solid #dcdcdc;
        border-radius: 8px;
        padding: 10px;
        margin-bottom: 20px;
      }

      .form-control:focus {
        border-color: #4e9ef2;
        box-shadow: 0 0 5px rgba(78, 158, 242, 0.5);
      }

      .btn-submit {
        background-color: #4e9ef2;
        color: white;
        border: none;
        width: 100%;
        height: 50px;
        font-size: 18px;
        font-weight: bold;
        border-radius: 8px;
        transition: background-color 0.3s ease;
      }

      .btn-submit:hover {
        background-color: #357ab9;
      }

      .form-label {
        font-size: 16px;
        color: #333;
        font-weight: bold;
        margin-bottom: 5px;
      }

      textarea {
        resize: none;
      }

      .rating-label {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .rating-stars {
        font-size: 24px;
        color: #ffd700;
        margin-top: -5px;
      }
    </style>
  </head>
  <body>
    <div class="form-container">
      <div class="form-title">리뷰 수정하기</div>
      <form id="reviewForm">
        <div class="mb-3">
          <label for="rating" class="form-label rating-label">
            평점
            <span class="rating-stars">⭐⭐⭐⭐⭐</span>
          </label>
          <input
            type="number"
            class="form-control"
            id="rating"
            name="rating"
            min="1"
            max="5"
            placeholder="1 ~ 5"
            required
          />
        </div>
        <div class="mb-3">
          <label for="comment" class="form-label">댓글</label>
          <textarea
            class="form-control"
            id="comment"
            name="comment"
            rows="4"
            placeholder="여기에 수정할 리뷰를 작성해 주세요."
            required
          ></textarea>
        </div>
        <button type="submit" class="btn btn-submit">수정 완료</button>
      </form>
    </div>

    <script>
      let accessToken = '';
      let reviewId = ''; // 리뷰 ID를 여기에 설정해주세요
      console.log('accessToken', accessToken);
      console.log('reviewId', reviewId);

      document.addEventListener('DOMContentLoaded', function () {
        // URL에서 reviewId를 추출
        reviewId = window.location.pathname.split('/').pop(); // URL의 마지막 부분을 가져옴
        console.log('reviewId', reviewId); // reviewId 출력

        const reviewForm = document.getElementById('reviewForm');

        // accessToken 및 reviewId의 값을 출력
        console.log('accessToken', accessToken);
        console.log('reviewId', reviewId);

        reviewForm.addEventListener('submit', function (e) {
          e.preventDefault(); // 폼의 기본 제출 동작 방지

          // 세션 데이터 가져오기 및 리뷰 업데이트
          fetchSessionData().then(() => {
            console.log('accessToken', accessToken); // accessToken 출력
            fetchReview();
          });
        });

        function fetchSessionData() {
          return fetch('/api/session', {
            method: 'GET',
            credentials: 'include',
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.accessToken) {
                accessToken = data.accessToken; // accessToken을 저장
              } else {
                alert('로그인이 필요합니다.');
                window.location.href = '/api/auth/sign-in'; // 로그인 페이지로 리디렉션
              }
            })
            .catch((error) => {
              console.error('세션 정보를 가져오는 중 오류 발생:', error);
            });
        }

        function fetchReview() {
          const data = {
            rating: parseInt(document.getElementById('rating').value), // 평점 정수로 변환
            comment: document.getElementById('comment').value, // 댓글
          };

          // PATCH 요청으로 리뷰 수정
          fetch(`/api/reviews/${reviewId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
              Authorization: `Bearer ${accessToken}`, // 토큰 인증
            },
            body: JSON.stringify(data), // 데이터 JSON 문자열로 변환
          })
            .then((response) => {
              if (response.ok) {
                alert('리뷰가 성공적으로 수정되었습니다!');
                window.location.href = '/api/review/my'; // 수정 후 이동할 페이지
              } else {
                return response.json().then((err) => {
                  console.error('서버 응답 오류:', err);
                  throw new Error('리뷰 수정에 실패했습니다.'); // 오류 처리
                });
              }
            })
            .catch((error) => {
              alert('리뷰 수정에 실패했습니다. 다시 시도해 주세요.');
              console.error(error);
            });
        }
      });
    </script>
  </body>
</html>
